@page "/"
@inject HttpClient Http

<h1>Hello, world!</h1>

<div>
    <AuthorizeView>
        <Authorized>
            <p>Hello, @context.User.Identity.Name!</p>
            <h3>Roles</h3>
            <ul>
                @foreach(var x in context.User.Claims.Where(x => x.Type == System.Security.Claims.ClaimTypes.Role))
                {
                    <li>@x.Value</li>
                }
            </ul>
            <a href="/.auth/logout">サインアウト</a>
        </Authorized>
        <NotAuthorized>
            <a href="/.auth/login/aad">AAD でサインイン</a>
            &nbsp;
            <a href="/.auth/login/twitter">Twitter でサインイン</a>
        </NotAuthorized>
    </AuthorizeView>
</div>

<p>@Message</p>
<button @onclick="Invoke">Invoke</button>

@code {
    private string Message { get; set; }
    private async Task Invoke()
    {
        var res = await Http.GetAsync($"/api/Greet");
        if (res.IsSuccessStatusCode)
        {
            Message = await res.Content.ReadAsStringAsync();
        }
        else
        {
            Message = "Error!!";
        }
    }
}
